{
  "_args": [
    [
      {
        "raw": "bindings@file:./libs/bindings",
        "scope": null,
        "escapedName": "bindings",
        "name": "bindings",
        "rawSpec": "file:./libs/bindings",
        "spec": "D:\\Projects\\azure-tools-angular4\\azure-tools\\app\\libs\\bindings",
        "type": "directory"
      },
      "D:\\Projects\\azure-tools-angular4\\azure-tools\\app"
    ]
  ],
  "_from": "libs\\bindings",
  "_id": "bindings@1.2.1",
  "_inCache": true,
  "_location": "/bindings",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bindings@file:./libs/bindings",
    "scope": null,
    "escapedName": "bindings",
    "name": "bindings",
    "rawSpec": "file:./libs/bindings",
    "spec": "D:\\Projects\\azure-tools-angular4\\azure-tools\\app\\libs\\bindings",
    "type": "directory"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "file:libs\\bindings",
  "_shasum": "59b289b4778e2f9f4e1aa2f6e25252ae5bee1b84",
  "_shrinkwrap": null,
  "_spec": "bindings@file:./libs/bindings",
  "_where": "D:\\Projects\\azure-tools-angular4\\azure-tools\\app",
  "dependencies": {},
  "description": "node-bindings\r =============\r ### Helper module for loading your native module's .node file",
  "devDependencies": {},
  "name": "bindings",
  "optionalDependencies": {},
  "readme": "node-bindings\r\n=============\r\n### Helper module for loading your native module's .node file\r\n\r\nThis is a helper module for authors of Node.js native addon modules.\r\nIt is basically the \"swiss army knife\" of `require()`ing your native module's\r\n`.node` file.\r\n\r\nThroughout the course of Node's native addon history, addons have ended up being\r\ncompiled in a variety of different places, depending on which build tool and which\r\nversion of node was used. To make matters worse, now the _gyp_ build tool can\r\nproduce either a _Release_ or _Debug_ build, each being built into different\r\nlocations.\r\n\r\nThis module checks _all_ the possible locations that a native addon would be built\r\nat, and returns the first one that loads successfully.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\nInstall with `npm`:\r\n\r\n``` bash\r\n$ npm install bindings\r\n```\r\n\r\nOr add it to the `\"dependencies\"` section of your _package.json_ file.\r\n\r\n\r\nExample\r\n-------\r\n\r\n`require()`ing the proper bindings file for the current node version, platform\r\nand architecture is as simple as:\r\n\r\n``` js\r\nvar bindings = require('bindings')('binding.node')\r\n\r\n// Use your bindings defined in your C files\r\nbindings.your_c_function()\r\n```\r\n\r\n\r\nNice Error Output\r\n-----------------\r\n\r\nWhen the `.node` file could not be loaded, `node-bindings` throws an Error with\r\na nice error message telling you exactly what was tried. You can also check the\r\n`err.tries` Array property.\r\n\r\n```\r\nError: Could not load the bindings file. Tried:\r\n → /Users/nrajlich/ref/build/binding.node\r\n → /Users/nrajlich/ref/build/Debug/binding.node\r\n → /Users/nrajlich/ref/build/Release/binding.node\r\n → /Users/nrajlich/ref/out/Debug/binding.node\r\n → /Users/nrajlich/ref/Debug/binding.node\r\n → /Users/nrajlich/ref/out/Release/binding.node\r\n → /Users/nrajlich/ref/Release/binding.node\r\n → /Users/nrajlich/ref/build/default/binding.node\r\n → /Users/nrajlich/ref/compiled/0.8.2/darwin/x64/binding.node\r\n    at bindings (/Users/nrajlich/ref/node_modules/bindings/bindings.js:84:13)\r\n    at Object.<anonymous> (/Users/nrajlich/ref/lib/ref.js:5:47)\r\n    at Module._compile (module.js:449:26)\r\n    at Object.Module._extensions..js (module.js:467:10)\r\n    at Module.load (module.js:356:32)\r\n    at Function.Module._load (module.js:312:12)\r\n    ...\r\n```\r\n\r\n\r\nLicense\r\n-------\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "scripts": {},
  "version": "1.2.1"
}
